@model StructureProject.Models.ContactInfo

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">

            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-mobile"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

    </div>

        <div class="form-group">

            @Html.LabelFor(model => model.TelNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="input-group col-md-3">

            @Html.EditorFor(model => model.TelNumber, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-phone"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.TelNumber, "", new { @class = "text-danger" })
        </div>
        @Html.HiddenFor(m => m.Country)

    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">

            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-globe-asia"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">

            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-buromobelexperte"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">

            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-city"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">

            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-map-marked-alt"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">

            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-map-pin"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
    </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" data-toggle="modal" data-target="#basicModal"  id="SaveButton" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div class="modal fade" id="basicModal" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Contact</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h3>Are you sure about these changes??</h3>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                    <button type="Submit" class="btn btn-primary">Do it!</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {

            var savedCountry = document.getElementById("Country").value;
            var elem = document.getElementById('Country');
            elem.parentNode.removeChild(elem);

            if (savedCountry != "") {
                var dropdownNations = $('#Country2');
                dropdownNations.empty();

            }
            else {
                var dropdownNations = $('#Country2');
                dropdownNations.empty();
                dropdownNations.append('<option selected="true" disabled>Choose Nation</option>');

            }



            const url = 'https://restcountries.eu/rest/v2/all?fields=name';

            //dropdownNations.append('<option selected="true" disabled>Choose Nation</option>');

            // Populate DropDown
            $.getJSON(url, function (data) {
                $.each(data, function (key, entry) {
                    dropdownNations.append($('<option></option>').attr('value', entry.name).text(entry.name));
                });
            });
            document.getElementById("Country2").id = "Country";
            document.getElementById("Country").setAttribute("name", "Country");
            if (savedCountry != "") {
                $("#Country2 option[value='" + savedCountry + "']").remove();
                $("option[value='"+savedCountry+"']").remove();
                dropdownNations.append($('<option selected="true"></option>').attr('value', savedCountry).text(savedCountry));
            }
           

        });
    </script>
}

