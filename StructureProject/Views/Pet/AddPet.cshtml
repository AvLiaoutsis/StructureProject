@model StructureProject.ViewModels.PetCreateViewModel


<h2>Add Pet</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Add Pet</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-10">

            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            <span class="input-group-addon">
                <i class="fas fa-font"></i>
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

    </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Kind, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kind, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Kind, "", new { @class = "text-danger" })
            </div>
        </div>*@

<div class="form-group">
    @Html.LabelFor(model => model.KindId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="input-group col-md-10">
        @Html.DropDownListFor(model => model.KindId, new SelectList(Model.Kinds, "Id", "Name"), "--Select--", new { @class = "form-control" })
        <span class="input-group-addon">
            <i class="fas fa-paw"></i>
        </span>
    </div>
    @Html.ValidationMessageFor(model => model.KindId)

</div>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
