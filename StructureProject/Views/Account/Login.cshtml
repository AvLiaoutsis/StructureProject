
@model StructureProject.Models.RegisterViewModel
@{
    ViewBag.Title = "Log in";
}
@Styles.Render("~/Content/Custom/login")


    <div class="login-reg-panel">
        <div class="login-info-box">
            <h2>Have an account?</h2>
            <p>You can login here</p>
            <label id="label-register" for="log-reg-show">Login</label>
            <input type="radio" name="active-log-panel" id="log-reg-show" checked="checked">
        </div>

        <div class="register-info-box">
            <h2>Don't have an account?</h2>
            <p>You can create one here</p>
            <label id="label-login" for="log-login-show">Register</label>
            <input type="radio" name="active-log-panel" id="log-login-show">
        </div>


        <div class="white-panel">
            <div class="login-show">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h2>LOGIN</h2>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                    <input type="submit" value="Log in" class="btn btn-default" />
                    <a href="">Forgot password?</a>

                }
            </div>

            <div class="register-show">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @id = "RegisterForm", @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h2>REGISTER</h2>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name" })
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                    @Html.TextBox("BirthDate", "", new { @class = "form-control", @placeholder = "Birth Date" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
                    <div class="col-md-12">

                        <input type="checkbox" id="myCheck" class="form-check-input col-md-1" style="margin-left: -17px;">
                        <label for="" class="col-md-10">I have read and agree to PetAir's Term of Service and Privacy Policy</label>

                    </div>
                    <div class="col-md-offset-8 col-md-10">
                        <input type="submit" id="submit" class="btn btn-default" value="Register" disabled="">

                    </div>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @id = "errorname", @style = "visibility:hidden" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger", @id = "errorlastname", @style = "visibility:hidden" })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger", @id = "errorbirthdate", @style = "visibility:hidden" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", @id = "errormail", @style = "visibility:hidden" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @id = "errorpassword", @style = "visibility:hidden" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", @id = "errorconfirmpassword", @style = "visibility:hidden" })

                }

            </div>
        </div>

    </div>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/login")

    <script>

        //$("#Name").keyup(function () {
        //    $('#errorname').on('DOMSubtreeModified', function () {
        //        let texterror = document.getElementById("Name-error").innerHTML;
        //        toastr.options = {
        //            "preventDuplicates": true,
        //            "preventOpenDuplicates": true
        //        };
        //        toastr.error(texterror);
        //    });
        //});

        //$("#LastName").keyup(function () {
        //    $('#errorlastname').on('DOMSubtreeModified', function () {
        //        let texterror = document.getElementById("LastName-error").innerHTML;
        //        toastr.options = {
        //            "preventDuplicates": true,
        //            "preventOpenDuplicates": true
        //        };
        //        toastr.error(texterror);
        //    });
        //});
        //$("#BirthDate").keyup(function () {
        //    $('#errorbirthdate').on('DOMSubtreeModified', function () {
        //        let texterror = document.getElementById("BirthDate-error").innerHTML;
        //        toastr.options = {
        //            "preventDuplicates": true,
        //            "preventOpenDuplicates": true
        //        };
        //        toastr.error(texterror);
        //    });
        //});

        //$("#Email").keyup(function () {
        //    $('#errormail').on('DOMSubtreeModified', function () {
        //        let texterror = document.getElementById("Email-error").innerHTML;
        //        toastr.options = {
        //            "preventDuplicates": true,
        //            "preventOpenDuplicates": true
        //        };
        //        toastr.error(texterror);
        //    });
        //});

        //$("#Password").keyup(function () {
        //    $('#errorpassword').on('DOMSubtreeModified', function () {
        //        let texterror = document.getElementById("Password-error").innerHTML;
        //        toastr.options = {
        //            "preventDuplicates": true,
        //            "preventOpenDuplicates": true
        //        };
        //        toastr.error(texterror);
        //    });
        //});

        $("#ConfirmPassword").keyup(function () {
            $('#errorconfirmpassword').on('DOMSubtreeModified', function () {
                let texterror = document.getElementById("ConfirmPassword-error").innerHTML;
                toastr.options = {
                    "preventDuplicates": true,
                    "preventOpenDuplicates": true
                };
                toastr.error(texterror);
            });
        });




    </script>

}