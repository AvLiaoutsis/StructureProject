@model StructureProject.Models.HostInfo


<h2>Availability</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (String.IsNullOrEmpty(Model.StartDateTime.ToString()))
                {
                    @Html.TextBox("StartDateTime", "", new { @class = "form-control" })


                }
                else
                {
                    @Html.TextBoxFor(m => m.StartDateTime, new { @class = "form-control" })

                }

                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
        
                </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (String.IsNullOrEmpty(Model.EndDateTime.ToString()) || (Model.EndDateTime.ToString() =="1/1/0001 00:00:00"))
                {
                    @Html.TextBox("EndDateTime", "", new { @class = "form-control" })


                }
                else
                {
                    @Html.TextBoxFor(m => m.EndDateTime, "{0:dd/M/yyyy}", new { @class = "form-control" })

                }

                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>


        var today = moment();
        //var firstDate = moment(document.getElementById("StartDateTime"));


        $(function () {
            //$('#StartDateTime').datetimepicker({
            //    format: 'D/M/YYYY'
            //});
            $("#EndDateTime").prop('disabled', true);

            $('#StartDateTime').datetimepicker({
                    format: 'D/M/YYYY',
                minDate: today
            });


        })
            
        $('#StartDateTime').blur(function () {
            $("#EndDateTime").prop('disabled', false);
            alert($('#StartDateTime').val());

            var startDate = moment($('#StartDateTime').val(), "DD/MM/YYYY").toDate();
            var startDateChange = moment(startDate).format('L');



            if (startDateChange) {

                if ($('#EndDateTime').val() < startDateChange) {
                    $('#EndDateTime').val(startDateChange);


                }

                $('#EndDateTime').datetimepicker({
                    format: 'D/M/YYYY',
                              minDate: startDateChange
                                });

            }

        });

        //$('#StartDateTime').blur(function () {
        //    $("#EndDateTime").prop('disabled', false);

        //                        //alert($('#EndDateTime').val());



        //    if ($('#StartDateTime').val()) {

        //        if ($('#EndDateTime').val() < $('#StartDateTime').val()) {
        //            $('#EndDateTime').val($('#StartDateTime').val());


        //        }
        //        else if ($('#EndDateTime').val() == "1/1/0001 00:00:00")
        //        {
        //            $('#EndDateTime').val($('#StartDateTime').val());
        //        } 

        //    }

        //});

        //$("#EndDateTime").blur(function () {

        //    var newfirstDate = $('#StartDateTime').val();

        //    $('#EndDateTime').datetimepicker({
        //        minDate: newfirstDate
        //    });

        //});

        $.validator.addMethod('date', function (value, element) {
            if (this.optional(element)) {
                return true;
            }
            var valid = true;
            return valid;
        });
    </script>
}