@model StructureProject.Models.HostInfo


<h2>Availability</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">
            @if (String.IsNullOrEmpty(Model.StartDateTime.ToString()))
            {

                @Html.TextBox("StartDateTime", "", new { @class = "form-control" })
                <span class="input-group-addon">
                    <i class="glyphicon glyphicon-calendar"></i>
                </span>
            }
            else
            {
                @Html.TextBoxFor(m => m.StartDateTime, new { @class = "form-control" })
                <span class="input-group-addon">
                    <i class="glyphicon glyphicon-calendar"></i>
                </span>

            }

        </div>
        @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })

    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="input-group col-md-3">
            @if (String.IsNullOrEmpty(Model.EndDateTime.ToString()) || (Model.EndDateTime.ToString() == "1/1/0001 00:00:00"))
            {
                @Html.TextBox("EndDateTime", "", new { @class = "form-control" })
                <span class="input-group-addon">
                    <i class="glyphicon glyphicon-calendar"></i>
                </span>

            }
            else
            {
                @Html.TextBoxFor(m => m.EndDateTime, new { @class = "form-control" })
                <span class="input-group-addon">
                    <i class="glyphicon glyphicon-calendar"></i>
                </span>
            }

        </div>
        @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })

    </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(function () {
            //$(':input[type="submit"]').prop('disabled', true);

            //$("#EndDateTime").prop('disabled', true);
            $('#EndDateTime').prop('readonly', true);
            $('#StartDateTime,#EndDateTime').datetimepicker({
                useCurrent: false,
                minDate: moment(),
                format: 'D/M/YYYY'

            });
            $('#StartDateTime').datetimepicker().on('dp.change', function (e) {
                //$("#EndDateTime").prop('disabled', false);
                $('#EndDateTime').prop('readonly', false);
                $(':input[type="submit"]').prop('disabled', true);
                var incrementDay = moment(new Date(e.date));
                incrementDay.add(1, 'days');
                $('#EndDateTime').data('DateTimePicker').minDate(incrementDay).format('D/M/YYYY');
                $(this).data("DateTimePicker").hide();
            });

            $('#EndDateTime').datetimepicker().on('dp.change', function (e) {
                var decrementDay = moment(new Date(e.date));
                decrementDay.subtract(1, 'days');
                $('#StartDateTime').data('DateTimePicker').maxDate(decrementDay).format('D/M/YYYY');
                $(this).data("DateTimePicker").hide();
                $(':input[type="submit"]').prop('disabled', false);

            });

        });


        //var today = moment();
        ////var firstDate = moment(document.getElementById("StartDateTime"));


        //$(function () {
        //    //$('#StartDateTime').datetimepicker({
        //    //    format: 'D/M/YYYY'
        //    //});
        //    $("#EndDateTime").prop('disabled', true);

        //    $('#StartDateTime').datetimepicker({
        //            format: 'D/M/YYYY',
        //        minDate: today
        //    });


        //})

        //$('#StartDateTime').blur(function () {
        //    $("#EndDateTime").prop('disabled', false);
        //    alert($('#StartDateTime').val());



        //    var startDate = moment($('#StartDateTime').val(), "DD/MM/YYYY").toDate();
        //    var startDateChange = moment(startDate).format('L');


        //    if (startDateChange) {

        //        if ($('#EndDateTime').val() < startDateChange) {
        //            $('#EndDateTime').val(startDateChange);


        //        }

        //        $('#EndDateTime').datetimepicker({
        //            format: 'D/M/YYYY',
        //                      minDate: startDateChange
        //        });


        //       $('#EndDateTime').data("DateTimePicker").destroy()


        //    }

        //});

        //$('#StartDateTime').blur(function () {
        //    $("#EndDateTime").prop('disabled', false);

        //                        //alert($('#EndDateTime').val());



        //    if ($('#StartDateTime').val()) {

        //        if ($('#EndDateTime').val() < $('#StartDateTime').val()) {
        //            $('#EndDateTime').val($('#StartDateTime').val());


        //        }
        //        else if ($('#EndDateTime').val() == "1/1/0001 00:00:00")
        //        {
        //            $('#EndDateTime').val($('#StartDateTime').val());
        //        }

        //    }

        //});

        //$("#EndDateTime").blur(function () {

        //    var newfirstDate = $('#StartDateTime').val();

        //    $('#EndDateTime').datetimepicker({
        //        minDate: newfirstDate
        //    });

        //});

        $.validator.addMethod('date', function (value, element) {
            if (this.optional(element)) {
                return true;
            }
            var valid = true;
            return valid;
        });
    </script>
}